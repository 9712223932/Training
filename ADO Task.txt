using System;
using System.Collections;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web;

namespace ConsoleApp7
{
    class Program
    {
        static void Main()
        {
            new Program().InsertCustomerInformation();
            new Program().getfirstCustomerInformation();
	    new Program().DisplayCustomerInformation();

	    new Program().InsertCustomerAccountManage();
            new Program().getfirstCustomerAccountManage();
	    new Program().DisplayCustomerAccountManage();	

            new Program().InsertAccountorTransectionType();
            new Program().getfirstAccountorTransectionType();
	    new Program().DisplayAccountorTransectionType();
	    new Program().DataTablesetAccountorTransectionType();

            new Program().InsertAccountorTransectionValue();
	    new Program().getfirstAccountorTransectionValue();
	    new Program().DisplayAccountorTransectionValue();

    	    new Program().InsertTransection();
            new Program().getfirstTransection();
	    new Program().DisplayTransection();

        }

	public void InsertCustomerInformation()
        {
            SqlConnection sqlConnetion = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ToString());

            string query = "Insert into CustomerInformation values ('Console',98561414,'Mumbai',getdate())";
            //string query = "CustomerInfo1";

            SqlCommand cmd = new SqlCommand(query, sqlConnetion);
            /* cmd.CommandType = System.Data.CommandType.StoredProcedure;
             cmd.Parameters.Add("@ciId", SqlDbType.Int).Value = 0;
             cmd.Parameters.Add("@custName", SqlDbType.VarChar).Value = "Store SP";
             cmd.Parameters.Add("@custmobileNo", SqlDbType.Int).Value = 87945122;
             cmd.Parameters.Add("@custAdd", SqlDbType.VarChar).Value = "Pune";
             cmd.Parameters.Add("@OPType", SqlDbType.VarChar).Value = "I";*/

            sqlConnetion.Open();
            int rowaffected = cmd.ExecuteNonQuery();
            sqlConnetion.Close();
            Console.WriteLine("CustomerInformation Record Inserted Successfully");
        }

        public void getfirstCustomerInformation()
        {
            SqlConnection sqlConnetion = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ToString());
            string retriveQuery = "select top 1 CustomerName from CustomerInformation";
            SqlCommand cmd = new SqlCommand(retriveQuery, sqlConnetion);
            cmd = new SqlCommand(retriveQuery, sqlConnetion);
            sqlConnetion.Open();
            string CustomerName = Convert.ToString(cmd.ExecuteScalar());
            sqlConnetion.Close();
            Console.WriteLine(CustomerName);
            Console.ReadKey();
        }

        public void DisplayCustomerInformation()
        {
            SqlConnection sqlConnetion = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ToString());
            string retriveQuery = "select *  from CustomerInformation";
            SqlCommand cmd = new SqlCommand(retriveQuery, sqlConnetion);
            sqlConnetion.Open();
            SqlDataReader rdr = cmd.ExecuteReader();
            if (rdr.HasRows)
            {
                while (rdr.Read())
                {
                    Console.WriteLine("{0} {1} {2} {3} {4}", rdr["CustomerInformationId"],rdr["CustomerName"], rdr["CustomerMobileNumber"], rdr["CustomerAddress"], rdr["CreatedOn"]);
                }
                Console.ReadKey();
            }
        }

	public void InsertCustomerAccountManage()
        {
            SqlConnection sqlConnetion = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ToString());

            string query = "Insert into CustomerAccountManage values (12127,402,4800,'Mumbai','BM123',106,getdate())";
            //string query = "CustomerAccountManage1";

            SqlCommand cmd = new SqlCommand(query, sqlConnetion);
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
             cmd.Parameters.Add("@camid", SqlDbType.Int).Value = 0;
             cmd.Parameters.Add("@accNumber", SqlDbType.VarChar).Value = 12128;
             cmd.Parameters.Add("@atvid", SqlDbType.Int).Value = 402;
             cmd.Parameters.Add("@accBalance", SqlDbType.Int).Value = 8500;
             cmd.Parameters.Add("@branch", SqlDbType.VarChar).Value = "Pune";
             cmd.Parameters.Add("@ifsc", SqlDbType.VarChar).Value = "PN123";
             cmd.Parameters.Add("@ciId", SqlDbType.Int).Value = "107";
            cmd.Parameters.Add("@OPType", SqlDbType.VarChar).Value = "I";


            sqlConnetion.Open();
            int rowaffected = cmd.ExecuteNonQuery();
            sqlConnetion.Close();
            Console.WriteLine("CustomerAccountManage Record Inserted Successfully");
        }

	public void getfirstCustomerAccountManage()
        {
            SqlConnection sqlConnetion = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ToString());
            string retriveQuery = "select top 1 CustomerAccountManageId from CustomerAccountManage";
            SqlCommand cmd = new SqlCommand(retriveQuery, sqlConnetion);
            cmd = new SqlCommand(retriveQuery, sqlConnetion);
            sqlConnetion.Open();
            string CustomerAccountManageId = Convert.ToString(cmd.ExecuteScalar());
            sqlConnetion.Close();
            Console.WriteLine(CustomerAccountManageId);
            Console.ReadKey();
        }

        public void DisplayCustomerAccountManage()
        {
            SqlConnection sqlConnetion = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ToString());
            string retriveQuery = "select *  from CustomerAccountManage";
            SqlCommand cmd = new SqlCommand(retriveQuery, sqlConnetion);
            sqlConnetion.Open();
            SqlDataReader rdr = cmd.ExecuteReader();
            if (rdr.HasRows)
            {
                while (rdr.Read())
                {
                    Console.WriteLine("{0} {1} {2} {3} {4} {5} {6} {7}", rdr["CustomerAccountManageId"],rdr["AccountNumber"], rdr["AccountType"], rdr["AccountBalance"], rdr["BranchName"], rdr["IfscCode"], rdr["CustomerInformationId"], rdr["CreatedOn"]);
                }
                Console.ReadKey();
            }
        }

        public void InsertAccountorTransectionType()
        {
            SqlConnection sqlConnetion = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ToString());

            string query = "Insert into AccountorTransectionType values ('Console')";
            //string query = "AccountorTransectionType1";

            SqlCommand cmd = new SqlCommand(query, sqlConnetion);
           /*cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.Add("@attid", SqlDbType.Int).Value = 0;
            cmd.Parameters.Add("@attname", SqlDbType.VarChar).Value = "Store SP";
            cmd.Parameters.Add("@OPType", SqlDbType.VarChar).Value = "I";*/

            sqlConnetion.Open();
            int rowaffected = cmd.ExecuteNonQuery();
            sqlConnetion.Close();
            Console.WriteLine("AccountorTransectionType Record Inserted Successfully");
        }

        public void getfirstAccountorTransectionType()
        {
            SqlConnection sqlConnetion = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ToString());
            string retriveQuery = "select top 1 AccountorTransectionTypeName from AccountorTransectionType";
            SqlCommand cmd = new SqlCommand(retriveQuery, sqlConnetion);
            cmd = new SqlCommand(retriveQuery, sqlConnetion);
            sqlConnetion.Open();
            string AccountorTransectionTypeName = Convert.ToString(cmd.ExecuteScalar());
            sqlConnetion.Close();
            Console.WriteLine(AccountorTransectionTypeName);
            Console.ReadKey();
        }

	public void DisplayAccountorTransectionType()
        {
            SqlConnection sqlConnetion = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ToString());
            string retriveQuery = "select *  from AccountorTransectionType";
            SqlCommand cmd = new SqlCommand(retriveQuery, sqlConnetion);
            sqlConnetion.Open();
            SqlDataReader rdr = cmd.ExecuteReader();
            if (rdr.HasRows)
            {
                while (rdr.Read())
                {
                    Console.WriteLine("{0} {1}", rdr["AccountorTransectionTypeId"], rdr["AccountorTransectionTypeName"]);
                }
                Console.ReadKey();
            }
        }

	public void DataTablesetAccountorTransectionType()
        {
            SqlConnection sqlConnetion = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ToString());
            string retriveQuery = "select *  from AccountorTransectionType";
            SqlCommand cmd = new SqlCommand(retriveQuery, sqlConnetion);
            sqlConnetion.Open();            
            SqlDataAdapter da = new SqlDataAdapter(cmd);
            sqlConnetion.Close();
            DataSet ds = new DataSet();
            da.Fill(ds, "AccountorTransectionType");
            Console.WriteLine("Using Data Set");
            foreach (DataRow row in ds.Tables["AccountorTransectionType"].Rows)
            {
                Console.WriteLine("{0}{1}", row["AccountorTransectionTypeId"] + "\t", row["AccountorTransectionTypeName"]);
            }
            Console.WriteLine("---------------");
            DataTable dt = new DataTable();
            da.Fill(dt);
            Console.WriteLine("Using Data Table");
            foreach (DataRow row in dt.Rows)
            {
                Console.WriteLine("{0}{1}", row["AccountorTransectionTypeId"] + "\t", row["AccountorTransectionTypeName"]);
            }            
            Console.ReadKey();
        }

	public void InsertAccountorTransectionValue()
        {
            SqlConnection sqlConnetion = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ToString());

            //string query = "Insert into AccountorTransectionValue values ('Console',301)";
            string query = "AccountorTransectionValue1";

            SqlCommand cmd = new SqlCommand(query, sqlConnetion);
            /*cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.Add("@atvid", SqlDbType.Int).Value = 0;
            cmd.Parameters.Add("@atvname", SqlDbType.VarChar).Value = "Store SP";
            cmd.Parameters.Add("@attid", SqlDbType.Int).Value = 302;
            cmd.Parameters.Add("@OPType", SqlDbType.VarChar).Value = "I";*/

            sqlConnetion.Open();
            int rowaffected = cmd.ExecuteNonQuery();
            sqlConnetion.Close();
            Console.WriteLine("AccountorTransectionValue Record Inserted Successfully");
        }

        public void getfirstAccountorTransectionValue()
        {
            SqlConnection sqlConnetion = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ToString());
            string retriveQuery = "select top 1 AccountorTransectionValueName from AccountorTransectionValue";
            SqlCommand cmd = new SqlCommand(retriveQuery, sqlConnetion);
            cmd = new SqlCommand(retriveQuery, sqlConnetion);
            sqlConnetion.Open();
            string AccountorTransectionValueName = Convert.ToString(cmd.ExecuteScalar());
            sqlConnetion.Close();
            Console.WriteLine(AccountorTransectionValueName);
            Console.ReadKey();
        }

	public void DisplayAccountorTransectionValue()
        {
            SqlConnection sqlConnetion = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ToString());
            string retriveQuery = "select *  from AccountorTransectionValue";
            SqlCommand cmd = new SqlCommand(retriveQuery, sqlConnetion);
            sqlConnetion.Open();
            SqlDataReader rdr = cmd.ExecuteReader();
            if (rdr.HasRows)
            {
                while (rdr.Read())
                {
                    Console.WriteLine("{0} {1} {2}", rdr["AccountorTransectionValueId"], rdr["AccountorTransectionValueName"],rdr["AccountorTransectionTypeId"]);
                }
                Console.ReadKey();
            }
        }

	public void InsertTransection()
        {
            SqlConnection sqlConnetion = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ToString());

            //string query = "Insert into Transection values (403,4800,205,getdate())";
            string query = "Transection1";

            SqlCommand cmd = new SqlCommand(query, sqlConnetion);
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
             cmd.Parameters.Add("@tid", SqlDbType.Int).Value = 0;            
             cmd.Parameters.Add("@atvid", SqlDbType.Int).Value = 404;
             cmd.Parameters.Add("@tamount", SqlDbType.Int).Value = 500;          
             cmd.Parameters.Add("@camid", SqlDbType.Int).Value = "207";
            cmd.Parameters.Add("@OPType", SqlDbType.VarChar).Value = "I";


            sqlConnetion.Open();
            int rowaffected = cmd.ExecuteNonQuery();
            sqlConnetion.Close();
            Console.WriteLine("Transection Record Inserted Successfully");
        }

        public void getfirstTransection()
        {
            SqlConnection sqlConnetion = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ToString());
            string retriveQuery = "select top 1 Transectionid from Transection";
            SqlCommand cmd = new SqlCommand(retriveQuery, sqlConnetion);
            cmd = new SqlCommand(retriveQuery, sqlConnetion);
            sqlConnetion.Open();
            string Transectionid = Convert.ToString(cmd.ExecuteScalar());
            sqlConnetion.Close();
            Console.WriteLine(Transectionid);
            Console.ReadKey();
        }

	public void DisplayTransection()
        {
            SqlConnection sqlConnetion = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ToString());
            string retriveQuery = "select *  from Transection";
            SqlCommand cmd = new SqlCommand(retriveQuery, sqlConnetion);
            sqlConnetion.Open();
            SqlDataReader rdr = cmd.ExecuteReader();
            if (rdr.HasRows)
            {
                while (rdr.Read())
                {
                    Console.WriteLine("{0} {1} {2} {3} {4}", rdr["TransectionId"], rdr["TransectionType"],rdr["TransectionAmmount"], rdr["CustomerAccountManageId"], rdr["CreatedOn"]);
                }
                Console.ReadKey();
            }
        }        
    }
}	
